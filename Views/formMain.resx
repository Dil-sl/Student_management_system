<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pVaw8lR20wAAAABJRU5ErkJggg==
</value>
  </data>
</root>